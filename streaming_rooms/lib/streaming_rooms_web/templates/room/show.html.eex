

<head>
    <link rel="stylesheet" href="<%= static_path(@conn, "/css/room/show.css") %>">

<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
</head>

<style type="text/css">
    .header-title{
  font-size: 12px;
  color: #ffffff;
  text-transform: uppercase;
  font-weight: 300;
  text-align: center;
  margin-bottom: 15px;
}
html, body {
    margin: 0;
    padding: 0;
}


html{
    margin: 0;
    padding: 0;
}
body{
  background: -webkit-linear-gradient(left, #25c481, #25b7c4);
  background: linear-gradient(to right, #25c481, #25b7c4);
  font-family: 'Roboto', sans-serif;
  margin: 0;
    padding: 0;
}

#back_button{
    margin-bottom: 20px;
    color: black;
}

/* Make it a marquee */
.marquee {
    width: 100%;
    margin: 0 auto;
    overflow: hidden;
    white-space: nowrap;
    box-sizing: border-box;
    /*animation: marquee 50s linear infinite;*/
    display: inline-block;
    color: #ffffff;


  font-family: 'Roboto', sans-serif;

}

.marquee:hover {
    animation-play-state: paused
}


ul.marquee li {
    display: inline-block;
    padding: 10px 20px;
    font-size: 70px;
}

/* Make it move */
@keyframes marquee {
    0%   { text-indent: 27.5em }
    100% { text-indent: -105em }
}

.container{
  max-width: 100%;
}

.table{
  width:20%;
}

.tbl-header{

  width: 340px;
  background-color: rgba(255,255,255,0.3);
 }
.tbl-content{
  height:400px;
  width: 340px;
  overflow-x:auto;
  margin-top: 0px;
  border: 1px solid rgba(255,255,255,0.3);
}
th{
    padding-left: 35%;
  margin: auto;
  width: 100%;
  text-align: center;
  font-weight: 500;
  font-size: 20px;
  color: #fff;
  text-transform: uppercase;
}
td{
    padding-left: 15%;

  font-weight: 300;
  font-size: 15px;
  color: #fff;
  border-bottom: solid 1px rgba(255,255,255,0.1);
}

#users {
        margin: auto;
  width: 100%;
  padding: 38px 20px;
  text-align: center;
  font-weight: 300;
  font-size: 15px;
  color: #fff;
  vertical-align:middle;
}

#statistics {
      margin: auto;
  width: 100%;
  padding: 38px 20px;
  text-align: center;
  font-weight: 300;
  font-size: 15px;
  color: #fff;
  vertical-align:middle;
  border-bottom: solid 1px rgba(255,255,255,0.1);
}


</style>
<div style="font-size: 60px;
  color: #ffffff;
  text-transform: uppercase;
  font-weight: 300;
  text-align: center;
  margin-bottom: 30px;
  margin-top: 30px;">
<h2>
  <%= @room.name %></h2>
</div>
<!--
<div id="user_id" data-url="<%= @current_user.id %>"></div> -->

<div id="room_id" data-url="<%= @room.id %>"></div>
<div id="youtube_id" data-url="<%= @room.youtube_link %>"></div>
<div id="soundcloud_id" data-url="<%= @room.soundcloud_link %>"></div>
<div id="username" data-url="<%= @current_user.username %>"></div>

<div>
    <% alias StreamingRooms.Rooms %>
</div>

<!-- Here's going to be the video -->


    <marquee scrollamount="7" class="marquee" onmouseover="this.stop();"
        onmouseout="this.start();">

        List of users connected: 
        <span id="list_of_users_connected"><%= 
                 Rooms.get_users_currently_in_room(@room.id) 
                 |> Enum.map(fn {_id, username} -> username <> ", " end) 
             %>
     </span>
    </marquee>




<div class="w3-content w3-margin-top" style="max-width:1400px;">

  <!-- The Grid -->
  <div class="w3-row-padding">
  
    <!-- Left Column -->
    <div class="w3-third">

        <div class="tbl-header">
        <table cellpadding="0" cellspacing="0" border="0">
        <thead>
        <tr>
            <th style="text-align: center !important;">RANKINGS</th>

        </tr>
    </thead>
    </table>
  </div>

<div class="tbl-content">
    <table cellpadding="0" cellspacing="0" border="0">
      <tbody id="tbodyy">
          <%=  response = Rooms.get_users_that_stream_the_most(@room.id) 
               if response != [] do %>
                    <%= raw(Rooms.get_users_that_stream_the_most(@room.id) 
                  |> Enum.map(fn {k, _v} -> "<tr><td>" <> k <> "</td></tr>" end)) %>
                <% end %>
      </tbody>
</table>
</div>
<br></br>

<div class="tbl-header">
        <table cellpadding="0" cellspacing="0" border="0">
        <thead>
        <tr>
            <th>STATISTICS</th>

        </tr>
    </thead>
    </table>
  </div>

<div style="height:200px;
  width: 340px;
  overflow-x:auto;
  margin-top: 0px;
  border: 1px solid rgba(255,255,255,0.3);">
    <table cellpadding="0" cellspacing="0" border="0">
      <tbody>
        <div id="statistics">
        Number of YouTube streams: <%= Rooms.get_youtube_streams_in_room(@room.id) %> </div>
        <div id="statistics">Number of Soundcloud streams: <%= Rooms.get_soundcloud_streams_in_room(@room.id) %> 
            </div>
    
    </tbody>
</table>
</div>
<br></br>


    <!-- End Left Column -->
    </div>


    <!-- Right Column -->
    <div class="w3-twothird">
        <br> </br>
        <div class="iframe" id="youtube_player">
            <img src="<%= @room.youtube_link %>" >
        </div>

        <br></br>

        <br></br>

        <div class="wrapper your-div" style='text-align:left'>
            <iframe id="soundcloud_player" width="640px" height="166px" scrolling="no" frameborder="no"
                src="https://w.soundcloud.com/player/?url=<%= @room.soundcloud_link %>">
            </iframe>
        </div>

    <!-- End Right Column -->
    </div>
    
  <!-- End Grid -->
  </div>
  
  <!-- End Page Container -->
</div>
<div style="text-align: center;">
    <span>
        <%= link "Back", id: "back_button", to: room_user_path(@conn, :update_user_not_in_room, @room.id), method: :patch, class: "btn btn-default btn-leavepage" %>
    </span>
</div>
<!-- YOUTUBE SCRIPT -->
<script type="text/javascript">

    // The base code was gotten from the Youtube official page: https://developers.google.com/youtube/iframe_api_reference

    // This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    var username = document.getElementById("username").getAttribute("data-url");
    var videoId = document.getElementById("youtube_id").getAttribute("data-url");
    var roomId = document.getElementById("room_id").getAttribute("data-url");
    var videoUrl = "/api/rooms_users/" + roomId + "/youtube";

    // This function creates an <iframe> (and YouTube player) after the API code downloads.
    var youtubePlayer;
    function onYouTubeIframeAPIReady() {
          youtubePlayer = new YT.Player('youtube_player', {
            height: '390',
            width: '640',
            videoId: videoId,
            events: {
              'onReady': onPlayerReady,
              'onStateChange': onPlayerStateChange
            }
        });
    }

    // The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      event.target.playVideo();
    }

    // Variables useful for when the state changes
    var endedAfterEnoughTime = false;
    var timeoutVariable;
    var youtubeDuration;
    var timeYoutubeTimerStarted;
    var timeElapsedOfYoutubeTimer = 0;
    var totalYoutubeTime = 0;

    function onPlayerStateChange(event) {
        state = event.data
        if (state == YT.PlayerState.ENDED){
            clearTimeout(timeoutVariable);
            timeoutVariable = undefined;
            totalYoutubeTime = 0;
            timeElapsedOfYoutubeTimer = 0;
            endedAfterEnoughTime = true;
            if (endedAfterEnoughTime){
                console.log("Youtube stream counts!");
                $.ajax({
                    url: videoUrl,
                    type: 'PATCH',
                    success: function(res) {
                        var responseMessage = JSON.parse(res);
                        if (responseMessage["result"] == "ok"){

                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        var responseMessage = JSON.parse(xhr.responseText);
                        console.log("COULD NOT INCREMENT: " + responseMessage["message"]);
                    }
                });
            }else{
                console.log("Youtube stream doesn't count!");
            }
            youtubePlayer.loadVideoById(videoId);
        }else if (state == YT.PlayerState.PAUSED){
            timeElapsedOfYoutubeTimer = (new Date()).getTime() - timeYoutubeTimerStarted;
            totalYoutubeTime += timeElapsedOfYoutubeTimer;
            clearTimeout(timeoutVariable);
            timeoutVariable = undefined;
        }else if (state == YT.PlayerState.PLAYING){
            endedAfterEnoughTime = false;
            if (!youtubeDuration && youtubePlayer.getDuration() > 0){
                youtubeDuration = (youtubePlayer.getDuration() - 1) * 1000;
            }
            timeYoutubeTimerStarted = (new Date()).getTime();
            if (!timeoutVariable){
                timeoutVariable = setTimeout(function(){ endedAfterEnoughTime = true; }, youtubeDuration - totalYoutubeTime);
            }
        }
    }

    function invokeInRoomFunction(value){
        // Set attribute in_room to true
        $.ajax({
            url: "/api/rooms_users/" + roomId + "/in_room",
            type: 'PATCH',
            dataType: 'json',
            data: JSON.parse('{"in_room": ' + value + '}'),
            success: function(res) {
                // console.log(res.result);
            },
            error: function(xhr, ajaxOptions, thrownError) {
                console.log("ERROR " + xhr);
                var responseMessage = JSON.parse(xhr.responseText);
                console.log("COULD NOT UPDATE VALUE: " + responseMessage["message"]);
            }
        });
    }

</script>

<!--
    <ul>
        <li>
          <strong>Name:</strong>
          <%= @room.name %>
        </li>
        <li>
          <strong>Soundcloud link:</strong>
          <%= @room.soundcloud_link %>
        </li>
        <li>
          <strong>Youtube link:</strong>
          <%= @room.youtube_link %>
        </li>
    </ul>
-->